version: '{build}'

branches:
    except:
        - /^travis.*$/

init:
    - git config --global core.autocrlf input

clone_depth: 1

# https://www.appveyor.com/docs/build-environment/#build-worker-images
image: Visual Studio 2015

environment:
    fast_finish: true
    matrix:
        - PLATFORM: x86
          QT5: C:\Qt\5.9\msvc2015
          CMAKE_GENERATOR: "NMake Makefiles"
          #         - platform: x64
          #           qt5: C:\Qt\5.9\msvc2015_64
          #           cmake_generator: "NMake Makefiles"

configuration: Release
    
# Configure git linebreaks
cache:
    - c:\projects\gsl -> appveyor.yml
    - c:\projects\qwt -> appveyor.yml

install:
    # Set up the environment
    # https://www.appveyor.com/docs/lang/cpp/
    - ECHO "Setting up x86 Environment"
    - CALL "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
      # - IF [%PLATFORM%]==[x64] (
      # -   ECHO "Setting up x64 Environment"

      # -   CALL "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 
      # -   CALL "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
      # - )
    # Add Qt and WiX to PATH
    - SET PATH=%QT5%\bin;C:\Program Files (x86)\WiX Toolset v3.11\bin;%PATH%
    - CD c:\projects
      # Install GSL
    - IF EXIST gsl (CD gsl & git pull) ELSE (git clone https://github.com/ampl/gsl.git & CD gsl)
    - cmake -DGSL_DISABLE_WARNINGS:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DMSVC_RUNTIME_DYNAMIC:BOOL=ON -DCMAKE_BUILD_TYPE="Release" -G "%CMAKE_GENERATOR%" .
    - cmake --build . --target install
    - SET GSL_ROOT_DIR="%ProgramFiles(x86)%\GSL"
    - CD ..
      # Install Qwt
    - IF EXIST qwt (CD qwt & svn update) ELSE (svn co -r HEAD svn://svn.code.sf.net/p/qwt/code/branches/qwt-6.1 qwt & CD qwt)
    - qmake
    - nmake 
    - set QWT_ROOT_DIR=%CD%
    - CD ..

build_script:
    - MKDIR sigmaspectra\build
    - CD sigmaspectra\build
    - cmake -DGSL_ROOT_DIR=%GSL_ROOT_DIR% -DQWT_ROOT_DIR=%QWT_ROOT_DIR% -G "%CMAKE_GENERATOR%" ..
    - cmake --build . --target install
    - cmake --build . --target installer
    - cmake --build . --target archive

artifacts:
    - path: build\SigmaSpectra-*.zip
      name: Zip Archive

    - path: build\SigmaSpectra-*.msi
      name: Installer

deploy:
    description: 'Release description'
    provider: GitHub
    auth_token:
        secure: e/Uc+Q6xQyd6u9tBsvh6UlYfmmJgSL/cmoq6dhS5NHkgQAvETilqfDsO2euzazfp
    draft: true
    prerelease: false
    on:
        # branch: /v\d+\.\d+\.\d+/       # Match against the version tag
        branch: master
        appveyor_repo_tag: true        # deploy on tag push only

